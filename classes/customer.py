class Customer:
    """
    Класс Customer

    Этот класс представляет клиента интернет-магазина.

    Атрибуты:
        name (str): Имя клиента.
        orders (list): Список заказов клиента.
    """

    def __init__(self, name: str):
        """
        Метод инициализации для создания нового клиента.

        Аргументы:
            name (str): Имя клиента.
        """
        self.name = name          # Название клиента
        self.orders = []          # Изначально передаем пустой список заказов

    def add_order(self, order):
        """
        Метод для добавления заказа в список заказов клиента.

        Аргументы:
            order (Order): Объект заказа, который нужно добавить.
        """
        self.orders.append(order)  # Добавляем новый заказ в список заказов

    def total_spent(self):
        """
        Метод для подсчета общей суммы, потраченной клиентом.

        Возвращает:
            float: Общая сумма всех заказов клиента.
        """
        return sum(order.total_price() for order in self.orders)  # Суммируем цены всех заказов

    def __str__(self):
        """
        Дандер метод для возвращения строкового представления клиента.

        Возвращает:
            str: Форматированная строка с информацией о клиенте.
        """
        return (f"Клиент (Имя={self.name}, "   # Имя клиента
                f"Заказов={len(self.orders)}, "  # Количество заказов
                f"Всего потрачено={self.total_spent()})")  # Общая сумма потраченных средств
